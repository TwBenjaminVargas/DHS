# Generated from /home/ben/Documentos/DHS/MavenDHS/dhs2024/src/main/python/dhs2024/compiladores.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,29,160,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,1,0,1,0,1,1,1,1,
        1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,
        1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,
        1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,19,1,19,
        1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,
        1,23,1,24,4,24,125,8,24,11,24,12,24,126,1,25,1,25,1,25,1,25,1,26,
        1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,
        1,29,1,29,1,30,1,30,3,30,151,8,30,1,30,1,30,1,30,5,30,156,8,30,10,
        30,12,30,159,9,30,0,0,31,1,0,3,0,5,1,7,2,9,3,11,4,13,5,15,6,17,7,
        19,8,21,9,23,10,25,11,27,12,29,13,31,14,33,15,35,16,37,17,39,18,
        41,19,43,20,45,21,47,22,49,23,51,24,53,25,55,26,57,27,59,28,61,29,
        1,0,3,2,0,65,90,97,122,1,0,48,57,3,0,9,10,13,13,32,32,162,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
        0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,
        0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
        0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,
        0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,1,63,1,0,0,0,3,65,1,0,
        0,0,5,67,1,0,0,0,7,69,1,0,0,0,9,71,1,0,0,0,11,73,1,0,0,0,13,75,1,
        0,0,0,15,77,1,0,0,0,17,79,1,0,0,0,19,81,1,0,0,0,21,83,1,0,0,0,23,
        85,1,0,0,0,25,87,1,0,0,0,27,90,1,0,0,0,29,93,1,0,0,0,31,96,1,0,0,
        0,33,99,1,0,0,0,35,102,1,0,0,0,37,105,1,0,0,0,39,107,1,0,0,0,41,
        109,1,0,0,0,43,111,1,0,0,0,45,114,1,0,0,0,47,117,1,0,0,0,49,124,
        1,0,0,0,51,128,1,0,0,0,53,132,1,0,0,0,55,136,1,0,0,0,57,139,1,0,
        0,0,59,144,1,0,0,0,61,150,1,0,0,0,63,64,7,0,0,0,64,2,1,0,0,0,65,
        66,7,1,0,0,66,4,1,0,0,0,67,68,5,40,0,0,68,6,1,0,0,0,69,70,5,41,0,
        0,70,8,1,0,0,0,71,72,5,123,0,0,72,10,1,0,0,0,73,74,5,125,0,0,74,
        12,1,0,0,0,75,76,5,59,0,0,76,14,1,0,0,0,77,78,5,43,0,0,78,16,1,0,
        0,0,79,80,5,45,0,0,80,18,1,0,0,0,81,82,5,42,0,0,82,20,1,0,0,0,83,
        84,5,47,0,0,84,22,1,0,0,0,85,86,5,37,0,0,86,24,1,0,0,0,87,88,5,43,
        0,0,88,89,5,43,0,0,89,26,1,0,0,0,90,91,5,45,0,0,91,92,5,45,0,0,92,
        28,1,0,0,0,93,94,5,38,0,0,94,95,5,38,0,0,95,30,1,0,0,0,96,97,5,124,
        0,0,97,98,5,124,0,0,98,32,1,0,0,0,99,100,5,61,0,0,100,101,5,61,0,
        0,101,34,1,0,0,0,102,103,5,33,0,0,103,104,5,61,0,0,104,36,1,0,0,
        0,105,106,5,61,0,0,106,38,1,0,0,0,107,108,5,60,0,0,108,40,1,0,0,
        0,109,110,5,62,0,0,110,42,1,0,0,0,111,112,5,60,0,0,112,113,5,61,
        0,0,113,44,1,0,0,0,114,115,5,62,0,0,115,116,5,61,0,0,116,46,1,0,
        0,0,117,118,5,119,0,0,118,119,5,104,0,0,119,120,5,105,0,0,120,121,
        5,108,0,0,121,122,5,101,0,0,122,48,1,0,0,0,123,125,3,3,1,0,124,123,
        1,0,0,0,125,126,1,0,0,0,126,124,1,0,0,0,126,127,1,0,0,0,127,50,1,
        0,0,0,128,129,5,105,0,0,129,130,5,110,0,0,130,131,5,116,0,0,131,
        52,1,0,0,0,132,133,5,102,0,0,133,134,5,111,0,0,134,135,5,114,0,0,
        135,54,1,0,0,0,136,137,5,105,0,0,137,138,5,102,0,0,138,56,1,0,0,
        0,139,140,5,101,0,0,140,141,5,108,0,0,141,142,5,115,0,0,142,143,
        5,101,0,0,143,58,1,0,0,0,144,145,7,2,0,0,145,146,1,0,0,0,146,147,
        6,29,0,0,147,60,1,0,0,0,148,151,3,1,0,0,149,151,5,95,0,0,150,148,
        1,0,0,0,150,149,1,0,0,0,151,157,1,0,0,0,152,156,3,1,0,0,153,156,
        3,3,1,0,154,156,5,95,0,0,155,152,1,0,0,0,155,153,1,0,0,0,155,154,
        1,0,0,0,156,159,1,0,0,0,157,155,1,0,0,0,157,158,1,0,0,0,158,62,1,
        0,0,0,159,157,1,0,0,0,5,0,126,150,155,157,1,6,0,0
    ]

class compiladoresLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    PA = 1
    PC = 2
    LLA = 3
    LLC = 4
    PYC = 5
    SUMA = 6
    RESTA = 7
    MUL = 8
    DIV = 9
    MOD = 10
    INC = 11
    DEC = 12
    AND = 13
    OR = 14
    IGUAL = 15
    NOT = 16
    ASIG = 17
    MENOR = 18
    MAYOR = 19
    MEI = 20
    MAI = 21
    WHILE = 22
    NUMERO = 23
    INT = 24
    FOR = 25
    IF = 26
    ELSE = 27
    WS = 28
    ID = 29

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'{'", "'}'", "';'", "'+'", "'-'", "'*'", "'/'", 
            "'%'", "'++'", "'--'", "'&&'", "'||'", "'=='", "'!='", "'='", 
            "'<'", "'>'", "'<='", "'>='", "'while'", "'int'", "'for'", "'if'", 
            "'else'" ]

    symbolicNames = [ "<INVALID>",
            "PA", "PC", "LLA", "LLC", "PYC", "SUMA", "RESTA", "MUL", "DIV", 
            "MOD", "INC", "DEC", "AND", "OR", "IGUAL", "NOT", "ASIG", "MENOR", 
            "MAYOR", "MEI", "MAI", "WHILE", "NUMERO", "INT", "FOR", "IF", 
            "ELSE", "WS", "ID" ]

    ruleNames = [ "LETRA", "DIGITO", "PA", "PC", "LLA", "LLC", "PYC", "SUMA", 
                  "RESTA", "MUL", "DIV", "MOD", "INC", "DEC", "AND", "OR", 
                  "IGUAL", "NOT", "ASIG", "MENOR", "MAYOR", "MEI", "MAI", 
                  "WHILE", "NUMERO", "INT", "FOR", "IF", "ELSE", "WS", "ID" ]

    grammarFileName = "compiladores.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


